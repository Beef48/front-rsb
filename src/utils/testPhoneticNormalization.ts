import { 
  normalizeWordForPhoneticAnalysis, 
  transcribeToPhonemes, 
  calculatePhoneticDistance,
  testNormalization 
} from './phoneticTranscription';

// Test complet de la normalisation phon√©tique
export function runPhoneticNormalizationTests() {
  console.log('üß™ === Test de normalisation phon√©tique ===');
  
  // Test 1: Suppression des articles
  console.log('\nüìù Test 1: Suppression des articles');
  const articleTests = [
    { input: 'le chat', target: 'chat' },
    { input: 'la maison', target: 'maison' }, 
    { input: 'les enfants', target: 'enfants' },
    { input: 'un livre', target: 'livre' },
    { input: 'une table', target: 'table' },
    { input: 'du pain', target: 'pain' },
    { input: 'des fleurs', target: 'fleurs' }
  ];
  
  articleTests.forEach(test => {
    const result = normalizeWordForPhoneticAnalysis(test.input);
    const targetResult = normalizeWordForPhoneticAnalysis(test.target);
    const match = result === targetResult;
    console.log(`${match ? '‚úÖ' : '‚ùå'} "${test.input}" ‚Üí "${result}" (vs "${test.target}" ‚Üí "${targetResult}")`);
  });
  
  // Test 2: Normalisation des accents
  console.log('\nüìù Test 2: Normalisation des accents');
  const accentTests = [
    { input: 'caf√©', target: 'cafe' },
    { input: 'p√®re', target: 'pere' },
    { input: 'm√®re', target: 'mere' },
    { input: '√™tre', target: 'etre' },
    { input: '√©t√©', target: 'ete' },
    { input: '√©l√®ve', target: 'eleve' },
    { input: 'h√¥tel', target: 'hotel' },
    { input: 'f√™te', target: 'fete' }
  ];
  
  accentTests.forEach(test => {
    const result = normalizeWordForPhoneticAnalysis(test.input);
    const targetResult = normalizeWordForPhoneticAnalysis(test.target);
    const match = result === targetResult;
    console.log(`${match ? '‚úÖ' : '‚ùå'} "${test.input}" ‚Üí "${result}" (vs "${test.target}" ‚Üí "${targetResult}")`);
  });
  
  // Test 3: Combinaison articles + accents
  console.log('\nüìù Test 3: Articles + accents combin√©s');
  const combinedTests = [
    { input: 'le caf√©', target: 'cafe' },
    { input: 'la m√®re', target: 'mere' },
    { input: 'un √©t√©', target: 'ete' },
    { input: 'une f√™te', target: 'fete' },
    { input: 'du p√®re', target: 'pere' }
  ];
  
  combinedTests.forEach(test => {
    const result = normalizeWordForPhoneticAnalysis(test.input);
    const targetResult = normalizeWordForPhoneticAnalysis(test.target);
    const match = result === targetResult;
    console.log(`${match ? '‚úÖ' : '‚ùå'} "${test.input}" ‚Üí "${result}" (vs "${test.target}" ‚Üí "${targetResult}")`);
  });
  
  // Test 4: Distance phon√©tique avec normalisation
  console.log('\nüìù Test 4: Distance phon√©tique avec normalisation');
  const distanceTests = [
    { word1: 'le chat', word2: 'chat' },
    { word1: 'caf√©', word2: 'cafe' },
    { word1: 'la m√®re', word2: 'mere' },
    { word1: 'un p√®re', word2: 'pere' }
  ];
  
  distanceTests.forEach(test => {
    const distance = calculatePhoneticDistance(test.word1, test.word2);
    const phonemes1 = transcribeToPhonemes(test.word1);
    const phonemes2 = transcribeToPhonemes(test.word2);
    console.log(`${distance === 0 ? '‚úÖ' : '‚ö†Ô∏è'} "${test.word1}" vs "${test.word2}": distance = ${distance}`);
    console.log(`   ‚Üí [${phonemes1.join(', ')}] vs [${phonemes2.join(', ')}]`);
  });
  
  console.log('\nüéØ Test de normalisation termin√© !');
}

// Fonction pour tester depuis la console du navigateur
export function testInBrowser() {
  console.log('Pour tester la normalisation, ex√©cutez:');
  console.log('import { runPhoneticNormalizationTests } from "./src/utils/testPhoneticNormalization";');
  console.log('runPhoneticNormalizationTests();');
}